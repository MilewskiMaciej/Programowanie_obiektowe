import java.lang.Math;

class HelloWorld {
    //Zadanie 1
    public static void trojkiPitagorejskie(int n) {
        System.out.println("Trojki pitagorejskie do liczby " + n + ":");
        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= n; j++) {
                int k = (int) Math.sqrt(Math.pow(i, 2) + Math.pow(j, 2));
                if (k <= n && Math.pow(i, 2) + Math.pow(j, 2) == Math.pow(k, 2)) {
                    System.out.println(i + "," + j + "," + k);
                }
            }
        }
    }
    
    //Zadanie 2
    public static void funKwaRozwiazania(int n) {
        System.out.println("Wszystkie mozliwe wspolczynniki dla n = " + n + ":");
        for(int i = -n; i <= n; i++) {
            if (i == 0) {
                continue;
            }
            for(int j = -n; j <= n; j++) {
                for(int k = -n; k <= n; k++) {
                    int d = (int) Math.pow(j, 2) - 4 * i * k;
                    if (d >= 0) {
                        System.out.println("a = " + i + ", b = " + j + ", c = " + k);
                    }
                }
            }
        }
    }
    
    //Zadanie 3
    public static void funKwaDelta(int n) {
        System.out.println("Wszystkie zestawy wspolczynnikow, gdzie delta jest liczba naturalna dla n = " + n + ":");
        for(int i = -n; i <= n; i++) {
            if (i == 0) {
                continue;
            }
            for(int j = -n; j <= n; j++) {
                for(int k = -n; k <= n; k++) {
                    int d = (j * j) - (4 * i * k);
                    if(d >= 0 && Math.sqrt(d) % 1 == 0) {
                        System.out.println("a = " + i + ", b = " + j + ", c = " + k);
                    }
                }
            }
        }
    }
    
    //Zadanie 4
    public static void liczbyPierwsze(int n) {
        System.out.print("Liczby pierwsze od 2 do " + n + ": ");
        for(int i = 2; i <= n; i++) {
            boolean isPrime = true;
            for(int j = 2; j <= Math.sqrt(i); j++) {
                if (i % j == 0) {
                    isPrime = false;
                    break;
                }
            }
            if (isPrime == true) {
                System.out.print(i + " ");
            }
        }
    }
    
    //Zadanie 5
    public static void liczbyPodzielne(double m, int n) {
        for(int i = 0; i <= Math.pow(10, m) - 1; i++) {
            if (i%n == 0) {
                System.out.print(i + " ");
            }
        }
    }
    
    //Zadanie 6 (dokończyć)
    public static void piramida(int n, int variant) {
        if(variant == 1) {
            for(int i = 1; i <= n; i++) {
                System.out.println("* ".repeat(i));
            }
        }
    }
    
    public static void silnia(int n) {
        int wynik = 1;
        for(int i = 1; i <= n; i++) {
            wynik = wynik*i;
        }
        System.out.print(wynik);
    }
    
    public static void silniaPodwojna(int n) {
        int wynik = 1;
        int i = n;
        while (i > 0) {
            wynik = wynik * i;
            i = i-2;
        }
        System.out.print(wynik);
    }
    
    public static void silnia(int m, int n) {
        int wynik = 1;
        int i = n;
        while (i > 0) {
            wynik = wynik * i;
            i = i-m;
        }
        System.out.print(wynik);
    }
    
    public static void dwumianNewtona(int n, int k) {
        int wynikS = 1;
        int wynikK = 1;
        int nawias = n-k;
        int wynikNawias = 1;
        for(int i = 1; i<=n;i++) {
            wynikS = wynikS*i;
        }
        for(int j = 1; j<=k; j++) {
            wynikK = wynikK*j;
        }
        for(int l = 1; l<=nawias;l++) {
            wynikNawias = wynikNawias * l;
        }
        int wynikOstateczny = wynikS/(wynikK*wynikNawias);
        System.out.print(wynikOstateczny);
    }
    
    public static void main(String[] args) {
        liczbyPierwsze(10);
    }
}
